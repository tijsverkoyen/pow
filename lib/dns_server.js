// Generated by CoffeeScript 1.10.0
(function() {
  var DnsServer, NS_C_IN, NS_RCODE_NXDOMAIN, NS_T_A, dnsserver,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  dnsserver = require("dnsserver");

  NS_T_A = 1;

  NS_C_IN = 1;

  NS_RCODE_NXDOMAIN = 3;

  module.exports = DnsServer = (function(superClass) {
    extend(DnsServer, superClass);

    function DnsServer(configuration) {
      this.configuration = configuration;
      this.handleRequest = bind(this.handleRequest, this);
      DnsServer.__super__.constructor.apply(this, arguments);
      this.on("request", this.handleRequest);
    }

    DnsServer.prototype.listen = function(port, callback) {
      this.bind(port);
      return typeof callback === "function" ? callback() : void 0;
    };

    DnsServer.prototype.handleRequest = function(req, res) {
      var pattern, q, ref;
      pattern = this.configuration.dnsDomainPattern;
      q = (ref = req.question) != null ? ref : {};
      if (q.type === NS_T_A && q["class"] === NS_C_IN && pattern.test(q.name)) {
        res.addRR(q.name, NS_T_A, NS_C_IN, 600, "127.0.0.1");
      } else {
        res.header.rcode = NS_RCODE_NXDOMAIN;
      }
      return res.send();
    };

    return DnsServer;

  })(dnsserver.Server);

}).call(this);
